A Haskell IRC bot framework
   & implementation of George Karavaev

Goals:
  - make it parse the serves response to NAMES so it can keep track of those
        + *** joined the channel
        + *** left the channel
  - make it keep a rolling history of the last N things said
        + maybe? this could just be left to the user for impl through the map
  - unicode support!!!! (bytestrings)
  - more control over hooks maybe?
  - removing hooks? (via id? that's hard... not very "functional"... maybe we should remove the addHooks func even)
  - move basic eval stuff into a BaseBot typeclass or something (a la MonadState, for instance)
  - possibly use irc library (http://hackage.haskell.org/package/irc) for passing messages